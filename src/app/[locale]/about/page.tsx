import { getTranslations } from 'next-intl/server'
import Link from 'next/link'

import { Header } from '@/components/layout/Header'
import { Footer } from '@/components/layout/Footer'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/Card'
import { Button } from '@/components/ui/Button'

// Types
interface Milestone {
  year: string
  event: string
  description: string
}

interface Stat {
  number: string
  label: string
  icon: string
}

interface CompanyValue {
  icon: string
  title: {
    en: string
    bn: string
  }
  description: {
    en: string
    bn: string
  }
}

interface Award {
  year: string
  title: string
  organization: string
  icon: string
}

interface Leader {
  name: string
  position: string
  bio: string
  initial: string
}

interface AboutPageProps {
  params: Promise<{
    locale: string
  }>
}

// Constants
const COMPANY_VALUES: readonly CompanyValue[] = [
  {
    icon: 'üéØ',
    title: { en: 'Excellence', bn: '‡¶â‡ßé‡¶ï‡¶∞‡ßç‡¶∑‡¶§‡¶æ' },
    description: {
      en: 'We strive for excellence in every service we provide, ensuring the highest quality standards.',
      bn: '‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∏‡ßá‡¶¨‡¶æ‡¶Ø‡¶º ‡¶â‡ßé‡¶ï‡¶∞‡ßç‡¶∑‡¶§‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡¶ø, ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡¶Æ‡¶æ‡¶®‡ßá‡¶∞ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶Ø‡¶º‡¶§‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡¶ø‡•§',
    },
  },
  {
    icon: 'ü§ù',
    title: { en: 'Trust', bn: '‡¶Ü‡¶∏‡ßç‡¶•‡¶æ' },
    description: {
      en: 'Building lasting relationships through transparency, reliability, and consistent service delivery.',
      bn: '‡¶∏‡ßç‡¶¨‡¶ö‡ßç‡¶õ‡¶§‡¶æ, ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø‡¶§‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶ß‡¶æ‡¶∞‡¶æ‡¶¨‡¶æ‡¶π‡¶ø‡¶ï ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶®‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶¶‡ßÄ‡¶∞‡ßç‡¶ò‡¶∏‡ßç‡¶•‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï ‡¶ó‡¶°‡¶º‡ßá ‡¶§‡ßÅ‡¶≤‡¶ø‡•§',
    },
  },
  {
    icon: 'üöÄ',
    title: { en: 'Innovation', bn: '‡¶â‡¶¶‡ßç‡¶≠‡¶æ‡¶¨‡¶®' },
    description: {
      en: 'Embracing cutting-edge technology to deliver modern solutions for contemporary challenges.',
      bn: '‡¶∏‡¶Æ‡¶∏‡¶æ‡¶Æ‡¶Ø‡¶º‡¶ø‡¶ï ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶®‡ßá ‡¶Ö‡¶§‡ßç‡¶Ø‡¶æ‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶™‡ßç‡¶∞‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø ‡¶ó‡ßç‡¶∞‡¶π‡¶£‡•§',
    },
  },
  {
    icon: 'üåç',
    title: { en: 'Accessibility', bn: '‡¶∏‡¶π‡¶ú‡¶≤‡¶≠‡ßç‡¶Ø‡¶§‡¶æ' },
    description: {
      en: 'Making communication services accessible to all, bridging the digital divide across Bangladesh.',
      bn: '‡¶∏‡¶ï‡¶≤‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶∏‡ßá‡¶¨‡¶æ ‡¶∏‡¶π‡¶ú‡¶≤‡¶≠‡ßç‡¶Ø ‡¶ï‡¶∞‡¶æ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂ ‡¶ú‡ßÅ‡¶°‡¶º‡ßá ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ú‡¶® ‡¶¶‡ßÇ‡¶∞‡ßÄ‡¶ï‡¶∞‡¶£‡•§',
    },
  },
] as const

const WHY_CHOOSE_BTCL_ITEMS = [
  {
    icon: 'üèõÔ∏è',
    key: 'government_backed',
  },
  {
    icon: '‚≠ê',
    key: 'experience',
  },
  {
    icon: 'üåê',
    key: 'coverage',
  },
  {
    icon: 'üí∞',
    key: 'pricing',
  },
] as const

// Utility functions
const getLocalizedText = (locale: string, enText: string, bnText: string): string => {
  return locale === 'en' ? enText : bnText
}

// Hook for data generation
const useAboutPageData = (locale: string) => {
  const milestones: Milestone[] = [
    {
      year: '1989',
      event: getLocalizedText(locale, 'BTCL Established', '‡¶¨‡¶ø‡¶ü‡¶ø‡¶∏‡¶ø‡¶è‡¶≤ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∑‡ßç‡¶†‡¶æ'),
      description: getLocalizedText(
          locale,
          'Founded as the national telecommunications company',
          '‡¶ú‡¶æ‡¶§‡ßÄ‡¶Ø‡¶º ‡¶ü‡ßá‡¶≤‡¶ø‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡ßã‡¶Æ‡ßç‡¶™‡¶æ‡¶®‡¶ø ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∑‡ßç‡¶†‡¶ø‡¶§'
      ),
    },
    {
      year: '2010',
      event: getLocalizedText(locale, 'SMS Gateway Launch', '‡¶è‡¶∏‡¶è‡¶Æ‡¶è‡¶∏ ‡¶ó‡ßá‡¶ü‡¶ì‡¶Ø‡¶º‡ßá ‡¶ö‡¶æ‡¶≤‡ßÅ'),
      description: getLocalizedText(
          locale,
          'Introduced first enterprise SMS solutions',
          '‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶è‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶ú ‡¶è‡¶∏‡¶è‡¶Æ‡¶è‡¶∏ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ö‡¶æ‡¶≤‡ßÅ'
      ),
    },
    {
      year: '2018',
      event: getLocalizedText(locale, 'Bulk SMS Service Expansion', '‡¶¨‡¶æ‡¶≤‡ßç‡¶ï ‡¶è‡¶∏‡¶è‡¶Æ‡¶è‡¶∏ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶∏‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶∏‡¶æ‡¶∞‡¶£'),
      description: getLocalizedText(
          locale,
          'Scaled services nationwide with enhanced features',
          '‡¶â‡¶®‡ßç‡¶®‡¶§ ‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø ‡¶∏‡¶π ‡¶¶‡ßá‡¶∂‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡ßÄ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶∏‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶∏‡¶æ‡¶∞‡¶£'
      ),
    },
    {
      year: '2024',
      event: getLocalizedText(locale, 'Modern Platform Launch', '‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ ‡¶ö‡¶æ‡¶≤‡ßÅ'),
      description: getLocalizedText(
          locale,
          'Next-generation API and dashboard platform',
          '‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡¶ú‡¶®‡ßç‡¶Æ‡ßá‡¶∞ API ‡¶è‡¶¨‡¶Ç ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ'
      ),
    },
  ]

  const stats: Stat[] = [
    {
      number: '1M+',
      label: getLocalizedText(locale, 'Messages Sent Daily', '‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶™‡ßç‡¶∞‡ßá‡¶∞‡¶£'),
      icon: 'üì±',
    },
    {
      number: '5000+',
      label: getLocalizedText(locale, 'Active Businesses', '‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ'),
      icon: 'üè¢',
    },
    {
      number: '99.9%',
      label: getLocalizedText(locale, 'Uptime Guarantee', '‡¶Ü‡¶™‡¶ü‡¶æ‡¶á‡¶Æ ‡¶ó‡ßç‡¶Ø‡¶æ‡¶∞‡¶æ‡¶®‡ßç‡¶ü‡¶ø'),
      icon: '‚ö°',
    },
    {
      number: '24/7',
      label: getLocalizedText(locale, 'Customer Support', '‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï ‡¶∏‡ßá‡¶¨‡¶æ'),
      icon: 'üõ°Ô∏è',
    },
  ]

  const awards: Award[] = [
    {
      year: '2023',
      title: getLocalizedText(
          locale,
          'Best Telecommunications Service Provider',
          '‡¶∏‡ßá‡¶∞‡¶æ ‡¶ü‡ßá‡¶≤‡¶ø‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶®‡¶ï‡¶æ‡¶∞‡ßÄ'
      ),
      organization: getLocalizedText(locale, 'Bangladesh IT Awards', '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂ ‡¶Ü‡¶á‡¶ü‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶°‡¶∏'),
      icon: 'üèÜ',
    },
    {
      year: '2022',
      title: getLocalizedText(
          locale,
          'Excellence in Digital Innovation',
          '‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶â‡¶¶‡ßç‡¶≠‡¶æ‡¶¨‡¶®‡ßá ‡¶∂‡ßç‡¶∞‡ßá‡¶∑‡ßç‡¶†‡¶§‡ßç‡¶¨'
      ),
      organization: getLocalizedText(
          locale,
          'Digital Bangladesh Summit',
          '‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂ ‡¶∏‡¶æ‡¶Æ‡¶ø‡¶ü'
      ),
      icon: 'ü•á',
    },
    {
      year: '2021',
      title: getLocalizedText(
          locale,
          'Customer Service Excellence',
          '‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï ‡¶∏‡ßá‡¶¨‡¶æ‡¶Ø‡¶º ‡¶∂‡ßç‡¶∞‡ßá‡¶∑‡ßç‡¶†‡¶§‡ßç‡¶¨'
      ),
      organization: getLocalizedText(
          locale,
          'Telecom Industry Awards',
          '‡¶ü‡ßá‡¶≤‡¶ø‡¶ï‡¶Æ ‡¶á‡¶®‡ßç‡¶°‡¶æ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶°‡¶∏'
      ),
      icon: '‚≠ê',
    },
  ]

  const leaders: Leader[] = [
    {
      name: getLocalizedText(locale, 'Mohammad Rahman', '‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶®'),
      position: getLocalizedText(locale, 'Managing Director', '‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ ‡¶™‡¶∞‡¶ø‡¶ö‡¶æ‡¶≤‡¶ï'),
      bio: getLocalizedText(
          locale,
          'Leading BTCL\'s digital transformation with over 25 years of telecommunications experience.',
          '‡ß®‡ß´ ‡¶¨‡¶õ‡¶∞‡ßá‡¶∞ ‡¶ü‡ßá‡¶≤‡¶ø‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶¨‡¶ø‡¶ü‡¶ø‡¶∏‡¶ø‡¶è‡¶≤-‡¶è‡¶∞ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞‡ßá‡¶∞ ‡¶®‡ßá‡¶§‡ßÉ‡¶§‡ßç‡¶¨ ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡ßá‡¶®‡•§'
      ),
      initial: 'M',
    },
    {
      name: getLocalizedText(locale, 'Dr. Fatima Khatun', '‡¶°. ‡¶´‡¶æ‡¶§‡¶ø‡¶Æ‡¶æ ‡¶ñ‡¶æ‡¶§‡ßÅ‡¶®'),
      position: getLocalizedText(locale, 'Chief Technology Officer', '‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶™‡ßç‡¶∞‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø ‡¶ï‡¶∞‡ßç‡¶Æ‡¶ï‡¶∞‡ßç‡¶§‡¶æ'),
      bio: getLocalizedText(
          locale,
          'Pioneering innovative solutions and overseeing technical operations across all BTCL services.',
          '‡¶â‡¶¶‡ßç‡¶≠‡¶æ‡¶¨‡¶®‡ßÄ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®‡ßá‡¶∞ ‡¶™‡¶•‡¶™‡ßç‡¶∞‡¶¶‡¶∞‡ßç‡¶∂‡¶ï ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶ø‡¶ü‡¶ø‡¶∏‡¶ø‡¶è‡¶≤-‡¶è‡¶∞ ‡¶∏‡¶ï‡¶≤ ‡¶∏‡ßá‡¶¨‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡ßç‡¶∞‡¶Æ ‡¶§‡¶¶‡¶æ‡¶∞‡¶ï‡¶ø‡•§'
      ),
      initial: 'F',
    },
    {
      name: getLocalizedText(locale, 'Ahmed Hassan', '‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶ ‡¶π‡¶æ‡¶∏‡¶æ‡¶®'),
      position: getLocalizedText(locale, 'Head of SMS Services', '‡¶è‡¶∏‡¶è‡¶Æ‡¶è‡¶∏ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶®'),
      bio: getLocalizedText(
          locale,
          'Ensuring reliable and efficient bulk SMS delivery with focus on customer satisfaction.',
          '‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï ‡¶∏‡¶®‡ßç‡¶§‡ßÅ‡¶∑‡ßç‡¶ü‡¶ø‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶Æ‡¶®‡ßã‡¶®‡¶ø‡¶¨‡ßá‡¶∂ ‡¶ï‡¶∞‡ßá ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶ì ‡¶¶‡¶ï‡ßç‡¶∑ ‡¶¨‡¶æ‡¶≤‡ßç‡¶ï ‡¶è‡¶∏‡¶è‡¶Æ‡¶è‡¶∏ ‡¶∏‡¶∞‡¶¨‡¶∞‡¶æ‡¶π ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§‡¶ï‡¶∞‡¶£‡•§'
      ),
      initial: 'A',
    },
  ]

  return { milestones, stats, awards, leaders }
}

// Main Component
export default async function AboutPage({ params }: AboutPageProps) {
  const { locale } = await params
  const t = await getTranslations()
  const { milestones, stats, awards, leaders } = useAboutPageData(locale)

  return (
      <div className="min-h-screen bg-white">
        <Header />

        <HeroSection locale={locale} />
        <CompanyOverviewSection locale={locale} />
        <StatisticsSection stats={stats} locale={locale} />
        <TimelineSection milestones={milestones} locale={locale} />
        <ValuesSection locale={locale} />
        <AwardsSection awards={awards} locale={locale} />
        <LeadershipSection leaders={leaders} locale={locale} />

        <Footer />
      </div>
  )
}

// Hero Section Component
function HeroSection({ locale }: { locale: string }) {
  return (
      <section className="relative overflow-hidden bg-gradient-to-br from-btcl-primary via-green-600 to-btcl-secondary py-24">
        {/* Animated Background Elements */}
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute -left-10 top-10 h-40 w-40 animate-pulse rounded-full bg-white/5 blur-3xl" />
          <div className="absolute -right-16 top-32 h-60 w-60 animate-pulse rounded-full bg-white/5 blur-3xl delay-1000" />
          <div className="absolute bottom-20 left-1/3 h-32 w-32 animate-pulse rounded-full bg-white/5 blur-3xl delay-500" />
        </div>

        <div className="relative z-10 mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <div className="text-center text-white">
            {/* Badge */}
            <div className="mb-8 inline-flex items-center gap-2 rounded-full border border-white/20 bg-white/10 px-6 py-3 backdrop-blur-sm">
              <span className="text-2xl">üèõÔ∏è</span>
              <span className="font-semibold">
              {getLocalizedText(locale, 'Since 1989', '‡ßß‡ßØ‡ßÆ‡ßØ ‡¶∏‡¶æ‡¶≤ ‡¶•‡ßá‡¶ï‡ßá')}
            </span>
            </div>

            <h1 className="mb-8 text-5xl font-bold leading-tight md:text-6xl lg:text-7xl">
            <span className="block bg-gradient-to-r from-white via-green-100 to-white bg-clip-text text-transparent">
              {getLocalizedText(locale, 'About BTCL', '‡¶¨‡¶ø‡¶ü‡¶ø‡¶∏‡¶ø‡¶è‡¶≤ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá')}
            </span>
            </h1>

            <p className="mx-auto max-w-4xl text-xl leading-relaxed text-green-100/90 md:text-2xl">
              {getLocalizedText(
                  locale,
                  'Leading Bangladesh\'s telecommunications infrastructure since 1989, now bringing you the most reliable bulk SMS service in the country.',
                  '‡ßß‡ßØ‡ßÆ‡ßØ ‡¶∏‡¶æ‡¶≤ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶ü‡ßá‡¶≤‡¶ø‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶Ö‡¶¨‡¶ï‡¶æ‡¶†‡¶æ‡¶Æ‡ßã‡¶∞ ‡¶®‡ßá‡¶§‡ßÉ‡¶§‡ßç‡¶¨ ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡¶ø, ‡¶è‡¶ñ‡¶® ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶¨‡¶æ‡¶≤‡ßç‡¶ï ‡¶è‡¶∏‡¶è‡¶Æ‡¶è‡¶∏ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø‡•§'
              )}
            </p>

            {/* Scroll Indicator */}
            <div className="mt-16 animate-bounce">
              <div className="mx-auto flex h-12 w-8 justify-center rounded-full border-2 border-white/40">
                <div className="mt-3 h-4 w-1 animate-pulse rounded-full bg-white/60" />
              </div>
            </div>
          </div>
        </div>
      </section>
  )
}

// Company Overview Section Component
function CompanyOverviewSection({ locale }: { locale: string }) {
  const whyChooseItems = WHY_CHOOSE_BTCL_ITEMS.map((item) => ({
    icon: item.icon,
    text: getWhyChooseText(locale, item.key),
  }))

  return (
      <section className="py-24">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 items-center gap-16 lg:grid-cols-2">
            <div>
              <div className="mb-8">
              <span className="inline-flex items-center gap-2 rounded-full bg-green-100 px-4 py-2 text-sm font-semibold text-green-700">
                <span className="h-2 w-2 rounded-full bg-green-500" />
                {getLocalizedText(locale, 'Our Mission', '‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≤‡¶ï‡ßç‡¶∑‡ßç‡¶Ø')}
              </span>
              </div>

              <h2 className="mb-8 text-4xl font-bold text-gray-900 md:text-5xl">
                {getLocalizedText(
                    locale,
                    'Connecting Bangladesh Through Innovation',
                    '‡¶â‡¶¶‡ßç‡¶≠‡¶æ‡¶¨‡¶®‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡¶ï‡ßá ‡¶∏‡¶Ç‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ'
                )}
              </h2>

              <div className="space-y-6 text-lg text-gray-600">
                <p>
                  {getLocalizedText(
                      locale,
                      'Bangladesh Telecommunications Company Limited (BTCL) is the national telecommunications company of Bangladesh, committed to providing world-class communication services to businesses and individuals across the country.',
                      '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂ ‡¶ü‡ßá‡¶≤‡¶ø‡¶ï‡¶Æ‡¶ø‡¶â‡¶®‡¶ø‡¶ï‡ßá‡¶∂‡¶®‡¶∏ ‡¶ï‡ßã‡¶Æ‡ßç‡¶™‡¶æ‡¶®‡¶ø ‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü‡ßá‡¶° (‡¶¨‡¶ø‡¶ü‡¶ø‡¶∏‡¶ø‡¶è‡¶≤) ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶ú‡¶æ‡¶§‡ßÄ‡¶Ø‡¶º ‡¶ü‡ßá‡¶≤‡¶ø‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡ßã‡¶Æ‡ßç‡¶™‡¶æ‡¶®‡¶ø, ‡¶Ø‡¶æ ‡¶¶‡ßá‡¶∂‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡ßÄ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ ‡¶ì ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶¶‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶Æ‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶®‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∂‡ßç‡¶∞‡ßÅ‡¶§‡¶ø‡¶¨‡¶¶‡ßç‡¶ß‡•§'
                  )}
                </p>
                <p>
                  {getLocalizedText(
                      locale,
                      'Our bulk SMS service represents the latest in our commitment to digital transformation, offering businesses a reliable, secure, and cost-effective way to communicate with their customers.',
                      '‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¨‡¶æ‡¶≤‡ßç‡¶ï ‡¶è‡¶∏‡¶è‡¶Æ‡¶è‡¶∏ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Ö‡¶ô‡ßç‡¶ó‡ßÄ‡¶ï‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶®‡¶ø‡¶ß‡¶ø‡¶§‡ßç‡¶¨ ‡¶ï‡¶∞‡ßá, ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ‡¶Ø‡¶º‡¶ø‡¶ï ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∑‡ßç‡¶†‡¶æ‡¶®‡¶ó‡ßÅ‡¶≤‡ßã‡¶ï‡ßá ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø, ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶ ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶æ‡¶∂‡ßç‡¶∞‡¶Ø‡¶º‡ßÄ ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó‡ßá‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡ßá‡•§'
                  )}
                </p>
              </div>
            </div>

            <WhyChooseBTCLCard locale={locale} items={whyChooseItems} />
          </div>
        </div>
      </section>
  )
}

// Why Choose BTCL Card Component
function WhyChooseBTCLCard({ locale, items }: { locale: string; items: { icon: string; text: string }[] }) {
  return (
      <div className="rounded-3xl bg-gradient-to-br from-gray-50 to-white p-8 shadow-2xl">
        <h3 className="mb-8 text-2xl font-bold text-gray-900">
          {getLocalizedText(locale, 'Why Choose BTCL?', '‡¶ï‡ßá‡¶® ‡¶¨‡¶ø‡¶ü‡¶ø‡¶∏‡¶ø‡¶è‡¶≤ ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡ßá‡¶¨‡ßá‡¶®?')}
        </h3>
        <div className="space-y-6">
          {items.map((item, index) => (
              <div key={index} className="flex items-center gap-4">
                <div className="flex h-12 w-12 items-center justify-center rounded-xl bg-green-100 text-xl">
                  {item.icon}
                </div>
                <span className="font-medium text-gray-700">{item.text}</span>
              </div>
          ))}
        </div>
      </div>
  )
}

// Statistics Section Component
function StatisticsSection({ stats, locale }: { stats: Stat[]; locale: string }) {
  return (
      <section className="bg-gradient-to-r from-btcl-primary to-green-600 py-20">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <div className="mb-16 text-center text-white">
            <h2 className="mb-4 text-4xl font-bold md:text-5xl">
              {getLocalizedText(locale, 'Our Impact in Numbers', '‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶≠‡¶æ‡¶¨')}
            </h2>
            <p className="text-xl text-green-100/90">
              {getLocalizedText(
                  locale,
                  'Trusted by thousands of businesses across Bangladesh',
                  '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶π‡¶æ‡¶ú‡¶æ‡¶∞‡ßã ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ‡¶∞ ‡¶Ü‡¶∏‡ßç‡¶•‡¶æ‡¶≠‡¶æ‡¶ú‡¶®'
              )}
            </p>
          </div>

          <div className="grid grid-cols-2 gap-8 md:grid-cols-4">
            {stats.map((stat, index) => (
                <StatCard key={index} stat={stat} />
            ))}
          </div>
        </div>
      </section>
  )
}

// Stat Card Component
function StatCard({ stat }: { stat: Stat }) {
  return (
      <div className="group text-center text-white transition-all duration-300 hover:scale-110">
        <div className="mx-auto mb-4 flex h-20 w-20 items-center justify-center rounded-full bg-white/10 text-3xl backdrop-blur-sm transition-all duration-300 group-hover:bg-white/20">
          {stat.icon}
        </div>
        <div className="mb-2 text-4xl font-bold md:text-5xl">{stat.number}</div>
        <div className="text-lg text-green-100/90">{stat.label}</div>
      </div>
  )
}

// Timeline Section Component
function TimelineSection({ milestones, locale }: { milestones: Milestone[]; locale: string }) {
  return (
      <section className="py-24">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <div className="mb-20 text-center">
            <h2 className="mb-4 text-4xl font-bold text-gray-900 md:text-5xl">
              {getLocalizedText(locale, 'Our Journey', '‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ')}
            </h2>
            <p className="text-xl text-gray-600">
              {getLocalizedText(
                  locale,
                  'Key milestones in BTCL\'s evolution',
                  '‡¶¨‡¶ø‡¶ü‡¶ø‡¶∏‡¶ø‡¶è‡¶≤-‡¶è‡¶∞ ‡¶¨‡¶ø‡¶ï‡¶æ‡¶∂‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶Æ‡¶æ‡¶á‡¶≤‡¶´‡¶≤‡¶ï'
              )}
            </p>
          </div>

          <div className="relative">
            {/* Timeline line */}
            <div className="absolute left-1/2 hidden h-full w-0.5 -translate-x-1/2 transform bg-gradient-to-b from-btcl-primary to-green-300 md:block" />

            <div className="space-y-12 md:space-y-16">
              {milestones.map((milestone, index) => (
                  <TimelineItem
                      key={milestone.year}
                      milestone={milestone}
                      index={index}
                      isReversed={index % 2 !== 0}
                  />
              ))}
            </div>
          </div>
        </div>
      </section>
  )
}

// Timeline Item Component
function TimelineItem({
                        milestone,
                        index,
                        isReversed,
                      }: {
  milestone: Milestone
  index: number
  isReversed: boolean
}) {
  return (
      <div className={`flex items-center gap-8 md:gap-16 ${isReversed ? 'md:flex-row-reverse' : 'md:flex-row'}`}>
        {/* Content */}
        <div className="flex-1 md:w-1/2">
          <Card className="transform transition-all duration-300 hover:scale-105 hover:shadow-xl">
            <CardHeader>
              <div className="mb-4 flex items-center gap-4">
                <div className="flex h-16 w-16 items-center justify-center rounded-full bg-gradient-to-r from-btcl-primary to-green-600 text-xl font-bold text-white">
                  {milestone.year}
                </div>
                <div>
                  <CardTitle className="text-xl text-gray-900">{milestone.event}</CardTitle>
                  <p className="mt-2 text-gray-600">{milestone.description}</p>
                </div>
              </div>
            </CardHeader>
          </Card>
        </div>

        {/* Center dot for desktop */}
        <div className="hidden md:block">
          <div className="h-6 w-6 rounded-full bg-btcl-primary shadow-lg" />
        </div>

        {/* Spacer for alignment */}
        <div className="hidden flex-1 md:block md:w-1/2" />
      </div>
  )
}

// Values Section Component
function ValuesSection({ locale }: { locale: string }) {
  return (
      <section className="bg-gray-50 py-24">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <div className="mb-20 text-center">
            <h2 className="mb-4 text-4xl font-bold text-gray-900 md:text-5xl">
              {getLocalizedText(locale, 'Our Core Values', '‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡¶¨‡ßã‡¶ß')}
            </h2>
            <p className="text-xl text-gray-600">
              {getLocalizedText(
                  locale,
                  'The principles that guide everything we do',
                  '‡¶Ø‡ßá ‡¶®‡ßÄ‡¶§‡¶ø‡¶Æ‡¶æ‡¶≤‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶ï‡¶≤ ‡¶ï‡¶æ‡¶ú‡¶ï‡ßá ‡¶™‡¶∞‡¶ø‡¶ö‡¶æ‡¶≤‡¶®‡¶æ ‡¶ï‡¶∞‡ßá'
              )}
            </p>
          </div>

          <div className="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-4">
            {COMPANY_VALUES.map((value, index) => (
                <ValueCard key={index} value={value} locale={locale} />
            ))}
          </div>
        </div>
      </section>
  )
}

// Value Card Component
function ValueCard({ value, locale }: { value: CompanyValue; locale: string }) {
  return (
      <Card className="group text-center transition-all duration-300 hover:scale-105 hover:shadow-xl">
        <CardHeader>
          <div className="mx-auto mb-6 flex h-20 w-20 items-center justify-center rounded-2xl bg-gradient-to-r from-btcl-primary to-green-600 text-4xl transition-all duration-300 group-hover:scale-110">
            {value.icon}
          </div>
          <CardTitle className="text-2xl">{value.title[locale as 'en' | 'bn']}</CardTitle>
        </CardHeader>
        <CardContent>
          <CardDescription className="text-lg text-gray-600">
            {value.description[locale as 'en' | 'bn']}
          </CardDescription>
        </CardContent>
      </Card>
  )
}

// Awards Section Component
function AwardsSection({ awards, locale }: { awards: Award[]; locale: string }) {
  return (
      <section className="bg-gradient-to-r from-gray-900 to-gray-800 py-24">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <div className="mb-20 text-center text-white">
            <h2 className="mb-4 text-4xl font-bold md:text-5xl">
              {getLocalizedText(locale, 'Awards & Recognition', '‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞ ‡¶ì ‡¶∏‡ßç‡¶¨‡ßÄ‡¶ï‡ßÉ‡¶§‡¶ø')}
            </h2>
            <p className="text-xl text-gray-300">
              {getLocalizedText(
                  locale,
                  'Recognition for our commitment to excellence',
                  '‡¶â‡ßé‡¶ï‡¶∞‡ßç‡¶∑‡¶§‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∂‡ßç‡¶∞‡ßÅ‡¶§‡¶ø‡¶∞ ‡¶∏‡ßç‡¶¨‡ßÄ‡¶ï‡ßÉ‡¶§‡¶ø'
              )}
            </p>
          </div>

          <div className="grid grid-cols-1 gap-8 md:grid-cols-3">
            {awards.map((award, index) => (
                <AwardCard key={index} award={award} />
            ))}
          </div>
        </div>
      </section>
  )
}

// Award Card Component
function AwardCard({ award }: { award: Award }) {
  return (
      <div className="group rounded-2xl bg-white/10 p-8 text-center text-white backdrop-blur-sm transition-all duration-300 hover:scale-105 hover:bg-white/20">
        <div className="mb-6 text-6xl">{award.icon}</div>
        <div className="mb-2 text-3xl font-bold text-yellow-400">{award.year}</div>
        <h3 className="mb-4 text-xl font-bold">{award.title}</h3>
        <p className="text-gray-300">{award.organization}</p>
      </div>
  )
}

// Leadership Section Component
function LeadershipSection({ leaders, locale }: { leaders: Leader[]; locale: string }) {
  return (
      <section className="py-24">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <div className="mb-20 text-center">
            <h2 className="mb-4 text-4xl font-bold text-gray-900 md:text-5xl">
              {getLocalizedText(locale, 'Leadership Team', '‡¶®‡ßá‡¶§‡ßÉ‡¶§‡ßç‡¶¨ ‡¶¶‡¶≤')}
            </h2>
            <p className="text-xl text-gray-600">
              {getLocalizedText(
                  locale,
                  'Meet the visionaries driving BTCL forward',
                  '‡¶¨‡¶ø‡¶ü‡¶ø‡¶∏‡¶ø‡¶è‡¶≤-‡¶ï‡ßá ‡¶è‡¶ó‡¶ø‡¶Ø‡¶º‡ßá ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶¶‡ßÇ‡¶∞‡¶¶‡¶∞‡ßç‡¶∂‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶™‡¶∞‡¶ø‡¶ö‡¶ø‡¶§ ‡¶π‡¶®'
              )}
            </p>
          </div>

          <div className="grid grid-cols-1 gap-8 md:grid-cols-3">
            {leaders.map((leader, index) => (
                <LeaderCard key={index} leader={leader} />
            ))}
          </div>
        </div>
      </section>
  )
}

// Leader Card Component
function LeaderCard({ leader }: { leader: Leader }) {
  return (
      <Card className="group text-center transition-all duration-300 hover:scale-105 hover:shadow-xl">
        <CardHeader>
          <div className="mx-auto mb-6 h-24 w-24 rounded-full bg-gradient-to-r from-btcl-primary to-green-600 p-1">
            <div className="flex h-full w-full items-center justify-center rounded-full bg-white text-3xl font-bold text-btcl-primary">
              {leader.initial}
            </div>
          </div>
          <CardTitle className="text-xl">{leader.name}</CardTitle>
          <CardDescription className="text-lg font-semibold text-btcl-primary">
            {leader.position}
          </CardDescription>
        </CardHeader>
        <CardContent>
          <p className="text-gray-600">{leader.bio}</p>
        </CardContent>
      </Card>
  )
}

// Helper function for Why Choose BTCL text
function getWhyChooseText(locale: string, key: string): string {
  const texts = {
    government_backed: {
      en: 'Government-backed reliability and trust',
      bn: '‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞-‡¶∏‡¶Æ‡¶∞‡ßç‡¶•‡¶ø‡¶§ ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø‡¶§‡¶æ ‡¶ì ‡¶Ü‡¶∏‡ßç‡¶•‡¶æ',
    },
    experience: {
      en: '35+ years of telecommunications expertise',
      bn: '‡ß©‡ß´+ ‡¶¨‡¶õ‡¶∞‡ßá‡¶∞ ‡¶ü‡ßá‡¶≤‡¶ø‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶¶‡¶ï‡ßç‡¶∑‡¶§‡¶æ',
    },
    coverage: {
      en: 'Nationwide infrastructure coverage',
      bn: '‡¶¶‡ßá‡¶∂‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡ßÄ ‡¶Ö‡¶¨‡¶ï‡¶æ‡¶†‡¶æ‡¶Æ‡ßã ‡¶ï‡¶≠‡¶æ‡¶∞‡ßá‡¶ú',
    },
    pricing: {
      en: 'Competitive pricing with transparent billing',
      bn: '‡¶∏‡ßç‡¶¨‡¶ö‡ßç‡¶õ ‡¶¨‡¶ø‡¶≤‡¶ø‡¶Ç ‡¶∏‡¶π ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø',
    },
  }

  return texts[key as keyof typeof texts]?.[locale as 'en' | 'bn'] ?? ''
}